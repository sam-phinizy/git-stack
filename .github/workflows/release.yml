name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: git-stack-linux
          - os: macos-latest
            goos: darwin
            goarch: amd64
            artifact_name: git-stack-macos-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            artifact_name: git-stack-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build release binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -ldflags="-s -w" -o ${{ matrix.artifact_name }} .

      - name: Make binary executable
        if: matrix.os == 'ubuntu-latest'
        run: chmod +x ${{ matrix.artifact_name }}

      - name: Calculate SHA256
        run: |
          sha256sum ${{ matrix.artifact_name }} > ${{ matrix.artifact_name }}.sha256
          echo "SHA256 for ${{ matrix.artifact_name }}:"
          cat ${{ matrix.artifact_name }}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.artifact_name }}
            ${{ matrix.artifact_name }}.sha256

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            ./git-stack-linux/git-stack-linux
            ./git-stack-macos-amd64/git-stack-macos-amd64
            ./git-stack-macos-arm64/git-stack-macos-arm64


  update-homebrew-formula:
    needs: create-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Read SHA256 checksums
        id: checksums
        run: |
          LINUX_SHA=$(cut -d' ' -f1 git-stack-linux/git-stack-linux.sha256)
          MACOS_AMD64_SHA=$(cut -d' ' -f1 git-stack-macos-amd64/git-stack-macos-amd64.sha256)
          MACOS_ARM64_SHA=$(cut -d' ' -f1 git-stack-macos-arm64/git-stack-macos-arm64.sha256)
          
          echo "linux_sha=$LINUX_SHA" >> $GITHUB_OUTPUT
          echo "macos_amd64_sha=$MACOS_AMD64_SHA" >> $GITHUB_OUTPUT
          echo "macos_arm64_sha=$MACOS_ARM64_SHA" >> $GITHUB_OUTPUT
          
          echo "Linux SHA256: $LINUX_SHA"
          echo "macOS AMD64 SHA256: $MACOS_AMD64_SHA"
          echo "macOS ARM64 SHA256: $MACOS_ARM64_SHA"

      - name: Update Homebrew formula
        run: |
          sed -i "s/version \".*\"/version \"${{ steps.version.outputs.version }}\"/" git-stack.rb
          sed -i "s/SHA256_PLACEHOLDER_INTEL/${{ steps.checksums.outputs.macos_amd64_sha }}/" git-stack.rb
          sed -i "s/SHA256_PLACEHOLDER_ARM/${{ steps.checksums.outputs.macos_arm64_sha }}/" git-stack.rb
          sed -i "s/SHA256_PLACEHOLDER/${{ steps.checksums.outputs.linux_sha }}/" git-stack.rb

      - name: Commit updated formula
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add git-stack.rb
          git commit -m "Update Homebrew formula to v${{ steps.version.outputs.version }} with SHA256 checksums" || exit 0

      - name: Push changes
        run: |
          git fetch origin main:main
          git checkout main
          git pull --rebase origin main
          git push origin main

  update-tap:
    needs: update-homebrew-formula
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # Get the updated formula from main branch

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: sam-phinizy/homebrew-beer-hall
          token: ${{ secrets.GITHUB_TOKEN }}
          path: beer-hall

      - name: Pull latest changes and copy updated formula to tap
        run: |
          git pull origin main
          ls -la git-stack.rb
          cat git-stack.rb | head -10
          cp git-stack.rb beer-hall/Formula/git-stack.rb

      - name: Commit and push to tap
        run: |
          cd beer-hall
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Formula/git-stack.rb
          git commit -m "Update git-stack formula to v${{ steps.version.outputs.version }}" || exit 0
          git push